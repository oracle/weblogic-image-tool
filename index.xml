<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebLogic Image Tool</title>
    <link>https://oracle.github.io/weblogic-image-tool/</link>
    <description>Recent content on WebLogic Image Tool</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2024 08:00:00 -0500</lastBuildDate><atom:link href="https://oracle.github.io/weblogic-image-tool/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create Image</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/tools/create-image/</link>
      <pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/tools/create-image/</guid>
      <description>The create command helps build a WebLogic container image from a given base OS image. There are a number of optional parameters for this feature. The required option for the command is marked in the following table.
NOTE: The WebLogic Image Tool does not support a Stack Patch Bundle (SPB; see Doc ID 2764636.1), because an SPB is not a patch but a mechanism for applying all PSU and recommended CPU and SPU patches to a WebLogic Server installation, similar to invoking the Image Tool create command with the --recommendedPatches option.</description>
    </item>
    
    <item>
      <title>Build from source</title>
      <link>https://oracle.github.io/weblogic-image-tool/developer/source/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/developer/source/</guid>
      <description>The Image Tool installer is available for download on the Releases page. If you want to build the installer from source instead of downloading it, follow these instructions:
Download and install JDK 8u261+. Download and install Maven 3.6.3+. Clone this repository to your local environment. Cloning options are shown under the Code button at the root of this project. For example, git clone https://github.com/oracle/weblogic-image-tool.git. From inside the top-level directory of the cloned project, weblogic-image-tool, using Maven, execute one or more of these phases: validate - Validate the project is correct and all necessary information is available.</description>
    </item>
    
    <item>
      <title>Create an image with full Internet access</title>
      <link>https://oracle.github.io/weblogic-image-tool/samples/create-image-with-internet/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/samples/create-image-with-internet/</guid>
      <description>The Image Tool supports creating Linux based WebLogic container images, applying WebLogic patches, and creating WebLogic domains. It can be used with or without Internet access.
In this use case, the Image Tool will:
Start with a base-level operating system image (ghcr.io/oracle/oraclelinux:8-slim). Update the image with the necessary packages for installing WebLogic Server. Install Java and WebLogic Server. Steps Download these Java and WebLogic installers from the Oracle Software Delivery Cloud and save them in a directory of your choice, for example, /home/acmeuser/wls-installers:</description>
    </item>
    
    <item>
      <title>Prerequisites</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/prerequisites/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/prerequisites/</guid>
      <description>A container image client on the build machine, such as Docker or Podman. For Docker, a minimum version of 18.03.1.ce is required. For Podman, a minimum version of 3.0.1 is required. An installed version of Java to run Image Tool, version 8+. Installers for Oracle WebLogic Server and Oracle JDK from the Oracle Software Delivery Cloud for installation into the new image. When using the imagetool alias from setup.sh instead of the shell script (imagetool.</description>
    </item>
    
    <item>
      <title>Contribute to WIT</title>
      <link>https://oracle.github.io/weblogic-image-tool/developer/contribute/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/developer/contribute/</guid>
      <description>Oracle welcomes contributions to this repository from anyone.
If you want to submit a pull request to fix a bug or enhance an existing feature, please first open an issue and link to that issue when you submit your pull request.
If you have any questions about a possible submission, feel free to open an issue too.
Contributing to the WebLogic Image Tool repository Pull requests can be made under The Oracle Contributor Agreement (OCA).</description>
    </item>
    
    <item>
      <title>Create an image without Internet access</title>
      <link>https://oracle.github.io/weblogic-image-tool/samples/create-image-no-internet/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/samples/create-image-no-internet/</guid>
      <description>In this use case, because there is no Internet access, you will need to download all the installers and patches, plus set up the cache. Also, you must provide a base operating system image that has the following packages installed:
gzip tar unzip Steps Download these Java and WebLogic installers from the Oracle Software Delivery Cloud and save them in a directory of your choice, for example, /home/acmeuser/wls-installers:
fmw_12.2.1.3.0_wls_Disk1_1of1.zip
jdk-8u202-linux-x64.tar.gz</description>
    </item>
    
    <item>
      <title>Setup</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/setup/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/setup/</guid>
      <description>Download the WIT release ZIP file to a desired location. The latest ZIP file can be found on the project releases page. Alternatively, you can download the ZIP file with cURL. curl -m 120 -fL https://github.com/oracle/weblogic-image-tool/releases/latest/download/imagetool.zip -o ./imagetool.zip Unzip the downloaded ZIP file into a directory of your choice. All of the contents of the ZIP file will be extracted into a single subdirectory named imagetool. OPTIONALLY: You may build the project (mvn clean package) to create the ZIP file installer in .</description>
    </item>
    
    <item>
      <title>Create Auxiliary Image</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/tools/create-aux-image/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/tools/create-aux-image/</guid>
      <description>The createAuxImage command helps build a container image from a given base OS image. Auxiliary images are very small images providing the WDT install files with WDT models, archives, and variables for WebLogic Kubernetes Operator - Auxiliary Images. These images are an alternative approach for including Model-in-Image model files, application archive files, WebLogic Deploying Tooling installation files, or other types of files, in your WebLogic Server Kubernetes Operator environment.
There are a number of optional parameters for this feature.</description>
    </item>
    
    <item>
      <title>Rebase Image</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/tools/rebase-image/</link>
      <pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/tools/rebase-image/</guid>
      <description>The rebase command creates a new container image and copies an existing WebLogic domain to that new image.
The new container image can be based on an existing image in the repository or created as part of the rebase operation similar to the create command.
Usage: imagetool rebase [OPTIONS] Parameter Definition Default --sourceImage (Required) Source Image containing the WebLogic domain. --tag (Required) Tag for the final build image. Example: store/oracle/weblogic:14.1.2.0.0 --additionalBuildCommands Path to a file with additional build commands.</description>
    </item>
    
    <item>
      <title>Patch an existing image</title>
      <link>https://oracle.github.io/weblogic-image-tool/samples/patching-image/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/samples/patching-image/</guid>
      <description>This example shows you how to apply WebLogic Server patches to an existing image. You can download patches using the Image Tool or by manually downloading them.
Steps Create the image, as directed in the Quick Start guide.
For each WebLogic patch, download it from Oracle Support and set up the cache.
For example, to download patch number 27342434 for WebLogic Server version 12.2.1.3.0:
$ imagetool cache addPatch --patchId 27342434_12.2.1.3.0 --path /home/acmeuser/cache/p27342434_122130_Generic.</description>
    </item>
    
    <item>
      <title>Steps</title>
      <link>https://oracle.github.io/weblogic-image-tool/quickstart/quickstart/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/quickstart/quickstart/</guid>
      <description>Before you begin Make sure that you have fulfilled the Prerequisites and Setup requirements.
Overview The high level steps for creating an image are:
Download the Java and WebLogic installers from the Oracle Software Delivery Cloud. Add the installers to the cache store. Run the imagetool command to create the image. Do this Download these Java and WebLogic installers from the Oracle Software Delivery Cloud and save them in a directory of your choice, for example, /home/acmeuser/wls-installers:</description>
    </item>
    
    <item>
      <title>Update Image</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/tools/update-image/</link>
      <pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/tools/update-image/</guid>
      <description>After you have created a container image with the Image Tool, you may want to change it from time to time. Use the update command to update the existing container images created with the Image Tool. For example, you may want to:
Apply a WebLogic patch Apply the latest PSU from Oracle Create a new WebLogic domain (if one did not already exist) Deploy a new application to an existing domain Modify the domain configuration (add a data source, change a port number, and such) NOTE: The WebLogic Image Tool does not support a Stack Patch Bundle (SPB; see Doc ID 2764636.</description>
    </item>
    
    <item>
      <title>Cleanup</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/cleanup/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/cleanup/</guid>
      <description>The Image Tool creates a temporary Docker context directory, prefixed by wlsimgbuilder_temp, every time the tool runs. Under normal circumstances, this context directory will be deleted. However, if the process is aborted or the tool is unable to remove the directory, it is safe for you to delete it manually.
By default, the Image Tool creates the Docker context directory under the user&amp;rsquo;s home directory. If you prefer to use a different directory for the temporary context, set the environment variable WLSIMG_BLDDIR.</description>
    </item>
    
    <item>
      <title>Create an image with a WLS domain using WDT</title>
      <link>https://oracle.github.io/weblogic-image-tool/samples/create-image-wdt/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/samples/create-image-wdt/</guid>
      <description>The Image Tool lets you create a customized WebLogic domain in the image using the WebLogic Deploy Tool.
Steps Create the image, as directed in the Quick Start guide.
Download the WebLogic Deploy Tool, and then add it to the cache store:
$ imagetool cache addInstaller --type wdt --version 0.22 --path /home/acmeuser/cache/weblogic-deploy.zip Provide the command-line options for the WebLogic Deploy Tool: $ imagetool create --fromImage myosimg:latest --tag wls:12.2.1.3.0 --version 12.2.1.3.0 --wdtVersion 1.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/config/</link>
      <pubDate>Tue, 16 Apr 2024 08:00:00 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/config/</guid>
      <description>The default configuration is typically adequate for common use. But, the following environment variables are provided for non-typical use cases when the default values are insufficient.
Environment variables WLSIMG_BLDDIR - During the build process, Image Tool creates a Docker context directory where it will create a Dockerfile and copy necessary files for the container image build. Setting this variable to another directory overrides the default of the user&amp;rsquo;s home directory as the parent folder of the Docker context directory.</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/logging/</link>
      <pubDate>Sat, 23 Feb 2019 17:19:24 -0500</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/logging/</guid>
      <description>The Image Tool uses standard Java logging. To alter the default logging settings, you can modify the logging.properties file under the bin directory where you installed the Image Tool.
To enable debug logging In logging.properties, comment the existing handlers property and uncomment the second handlers line below the first line that you just commented. This should make the logging.properties file look something like this:
#handlers=java.util.logging.ConsoleHandler $ handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler Then, change level to FINE or FINER.</description>
    </item>
    
    <item>
      <title>Inspect Image</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/tools/inspect-image/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/tools/inspect-image/</guid>
      <description>The inspect command reports on the contents of a container image providing version and location information for Java and WebLogic installations.
Usage: imagetool inspect [OPTIONS] Parameter Definition Default --image, -i (Required) The image ID or image name to be inspected. --builder, -b Executable to inspect Docker images. Use the full path of the executable if not on your path. Defaults to docker, or, when set, to the value in environment variable WLSIMG_BUILDER.</description>
    </item>
    
    <item>
      <title>Cache</title>
      <link>https://oracle.github.io/weblogic-image-tool/userguide/tools/cache/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/userguide/tools/cache/</guid>
      <description>The Image Tool maintains a local file cache store. This store is used to look up where the Java, WebLogic Server installers, and WebLogic Server patches reside in the local file system.
By default, the cache store is located in the user&amp;rsquo;s $HOME/cache directory. Under this directory, the lookup information is stored in the .metadata file. All automatically downloaded patches also reside in this directory.
You can change the default cache store location by setting the environment variable WLSIMG_CACHEDIR:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://oracle.github.io/weblogic-image-tool/argument-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/argument-file/</guid>
      <description>Use an argument file You can save all arguments passed for the Image Tool in a file, then use the file as a parameter.
For example, create a file called build_args:
create --type wls --version 12.2.1.3.0 --tag wls:122130 --user acmeuser@mycompany.com --httpProxyUrl http://mycompany-proxy:80 --httpsProxyUrl http://mycompany-proxy:80 --passwordEnv MYPWD Use it on the command line, as follows:
imagetool @/path/to/build_args Copyright Copyright (c) 2019, 2021, Oracle and/or its affiliates.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://oracle.github.io/weblogic-image-tool/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://oracle.github.io/weblogic-image-tool/release-notes/</guid>
      <description>Release Notes The upcoming change to Oracle Support&amp;rsquo;s recommended patches list will require WebLogic Image Tool 1.9.11 in order to use the --recommendedPatches or --latestPSU flags. Due to changes in Oracle’s security, older versions of the Image Tool will no longer be able to download patches. Please use WebLogic Image Tool 1.9.10 or later. </description>
    </item>
    
  </channel>
</rss>
