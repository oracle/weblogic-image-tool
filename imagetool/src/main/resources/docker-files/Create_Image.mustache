#
# Copyright (c) 2019, 2021, Oracle and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
#
FROM {{baseImage}} as os_update
LABEL com.oracle.weblogic.imagetool.buildid="{{buildId}}"
USER root
{{> package-managers}}

{{> create-user-group}}

{{#installJava}}
# Install Java
FROM os_update as jdk_build
LABEL com.oracle.weblogic.imagetool.buildid="{{buildId}}"

ENV JAVA_HOME={{{java_home}}}

COPY --chown={{userid}}:{{groupid}} {{java_pkg}} {{{tempDir}}}/

USER {{userid}}

{{#beforeJdkInstall}}
    {{{.}}}
{{/beforeJdkInstall}}

RUN tar xzf {{{tempDir}}}/{{java_pkg}} -C /u01 \
 && $(test -d /u01/jdk* && mv /u01/jdk* {{{java_home}}} || mv /u01/graal* {{{java_home}}}) \
 && rm -rf {{{tempDir}}} \
 && rm -f {{{java_home}}}/javafx-src.zip {{{java_home}}}/src.zip

{{#afterJdkInstall}}
    {{{.}}}
{{/afterJdkInstall}}
{{/installJava}}

# Install Middleware
FROM os_update as wls_build
LABEL com.oracle.weblogic.imagetool.buildid="{{buildId}}"

ENV JAVA_HOME={{{java_home}}} \
    ORACLE_HOME={{{oracle_home}}} \
    OPATCH_NO_FUSER=true

RUN mkdir -p {{{oracle_home}}} \
{{#isCustomInventoryLoc}}
    && mkdir -p {{inv_loc}} \
    && chown {{userid}}:{{groupid}} {{inv_loc}} \
{{/isCustomInventoryLoc}}
 && mkdir -p {{orainv_dir}} \
 && chown {{userid}}:{{groupid}} {{orainv_dir}} \
 && chown {{userid}}:{{groupid}} {{{oracle_home}}}

{{#installJava}}COPY --from=jdk_build --chown={{userid}}:{{groupid}} {{{java_home}}} {{{java_home}}}/
{{/installJava}}

{{#installPackages}}COPY --chown={{userid}}:{{groupid}} {{installerFilename}} {{responseFile.name}} {{{tempDir}}}/
{{/installPackages}}
COPY --chown={{userid}}:{{groupid}} oraInst.loc {{inv_loc}}/

USER {{userid}}

{{#beforeFmwInstall}}
    {{{.}}}
{{/beforeFmwInstall}}

RUN echo "INSTALLING MIDDLEWARE" \
{{#installPackages}}
 && echo "INSTALLING {{type}}" \
 && {{#isZip}}unzip -q {{{tempDir}}}/{{installerFilename}} "*.jar" -d {{{tempDir}}} &&{{/isZip}} \
    {{{java_home}}}/bin/java -Xmx1024m -jar {{{tempDir}}}/{{jarName}} -silent ORACLE_HOME={{{oracle_home}}} \
    -responseFile {{{tempDir}}}/{{responseFile.name}} -invPtrLoc {{inv_loc}}/oraInst.loc -ignoreSysPrereqs -force -novalidation \
{{/installPackages}}
 && chmod -R g+r {{{oracle_home}}}

{{> fmw-patching}}

{{#afterFmwInstall}}
    {{{.}}}
{{/afterFmwInstall}}

{{#isWdtEnabled}}
    FROM wls_build as wdt_build
    LABEL com.oracle.weblogic.imagetool.buildid="{{buildId}}"

    ENV WLSDEPLOY_PROPERTIES="{{{wlsdeploy_properties}}} -Djava.security.egd=file:/dev/./urandom" \
        DOMAIN_HOME={{{domain_home}}}

    COPY --chown={{userid}}:{{groupid}} {{{wdtInstaller}}} {{{tempDir}}}/

    RUN mkdir -p {{{wdt_home}}} \
    && chown {{userid}}:{{groupid}} {{{wdt_home}}}

    USER {{userid}}

    RUN cd {{{wdt_home}}} \
    && mkdir -p {{{wdt_model_home}}} \
    && mkdir -p $(dirname {{{domain_home}}})

    {{#wdtModels}}
        COPY --chown={{userid}}:{{groupid}} {{{.}}} {{{wdt_model_home}}}/
    {{/wdtModels}}

    {{#wdtArchives}}
        COPY --chown={{userid}}:{{groupid}} {{{.}}} {{{wdt_model_home}}}/
    {{/wdtArchives}}

    {{#wdtVariables}}
        COPY --chown={{userid}}:{{groupid}} {{{.}}} {{{wdt_model_home}}}/
    {{/wdtVariables}}

    {{#beforeWdtCommand}}
        {{{.}}}
    {{/beforeWdtCommand}}

    RUN unzip -q {{{tempDir}}}/{{{wdtInstaller}}} -d {{{wdt_home}}}
    {{^modelOnly}}
        RUN cd {{{wdt_home}}}/weblogic-deploy/bin \
        && {{#isWdtUseEncryption}}echo {{{wdtEncryptionKey}}} | {{/isWdtUseEncryption}} ./createDomain.sh \
        -oracle_home {{{oracle_home}}} \
        -domain_home {{{domain_home}}} \
        -domain_type {{domainType}} \
        {{#isWdtUseEncryption}}
            -use_encryption \
        {{/isWdtUseEncryption}}
        {{#runRcu}}
            -run_rcu \
        {{/runRcu}}
        {{{wdtVariableFileArgument}}} {{{wdtModelFileArgument}}} {{{wdtArchiveFileArgument}}} \
        && chmod -R g+w {{{domain_home}}}
    {{/modelOnly}}
    {{#isWdtValidateEnabled}}
        RUN cd {{{wdt_home}}}/weblogic-deploy/bin \
        && rm ./*.cmd \
        && chmod ug+x ./*.sh \
        && chmod -R g+w {{{wdt_home}}}/weblogic-deploy/lib \
        && ./validateModel.sh {{^strictValidation}}-method lax{{/strictValidation}} \
        -oracle_home {{{oracle_home}}} \
        -domain_type {{domainType}} \
        {{{wdtVariableFileArgument}}} {{{wdtModelFileArgument}}} {{{wdtArchiveFileArgument}}} \
        && rm -rf {{{wdt_home}}}/weblogic-deploy/logs \
        && shopt -s globstar && rm -f {{{wdt_home}}}/weblogic-deploy/lib/python/**/*.class
    {{/isWdtValidateEnabled}}

    {{#afterWdtCommand}}
        {{{.}}}
    {{/afterWdtCommand}}

{{/isWdtEnabled}}

FROM os_update as final_build

ENV ORACLE_HOME={{{oracle_home}}} \
{{#installJava}}
    JAVA_HOME={{{java_home}}} \
{{/installJava}}
{{#isWdtEnabled}}
    DOMAIN_HOME={{{domain_home}}} \
    {{#modelOnly}}
        WDT_MODEL_HOME={{{wdt_model_home}}} \
    {{/modelOnly}}
    {{/isWdtEnabled}}
    PATH=${PATH}:{{{java_home}}}/bin:{{{oracle_home}}}/oracle_common/common/bin:{{{oracle_home}}}/wlserver/common/bin:{{{oracle_home}}}{{#isWdtEnabled}}:${{{domain_home}}}/bin{{/isWdtEnabled}}

LABEL com.oracle.weblogic.imagetool.buildid="{{buildId}}"

{{#installJava}}
    COPY --from=jdk_build --chown={{userid}}:{{groupid}} {{{java_home}}} {{{java_home}}}/
{{/installJava}}

COPY --from=wls_build --chown={{userid}}:{{groupid}} {{{oracle_home}}} {{{oracle_home}}}/
{{#copyOraInst}}
    COPY --from=wls_build --chown={{userid}}:{{groupid}} {{inv_loc}}/oraInst.loc  {{inv_loc}}/oraInst.loc
{{/copyOraInst}}
{{#copyOraInventoryDir}}
    COPY --from=wls_build --chown={{userid}}:{{groupid}} {{orainv_dir}} {{orainv_dir}}/
{{/copyOraInventoryDir}}

{{#isWdtEnabled}}
    {{#modelOnly}}
        RUN DOMAIN_PARENT=$(dirname {{{domain_home}}}) \
        && mkdir -p $DOMAIN_PARENT \
        && chown {{userid}}:{{groupid}} $DOMAIN_PARENT \
        && chmod g+w $DOMAIN_PARENT \
        && mkdir -p {{{wdt_model_home}}} \
        && chmod g+w {{{wdt_model_home}}}
        COPY --from=wdt_build --chown={{userid}}:{{groupid}} {{wdt_home}} {{wdt_home}}/
        {{#isWdtModelHomeOutsideWdtHome}}
            COPY --from=wdt_build --chown={{userid}}:{{groupid}} {{wdt_model_home}} {{wdt_model_home}}/
        {{/isWdtModelHomeOutsideWdtHome}}
    {{/modelOnly}}
    {{^modelOnly}}
        COPY --from=wdt_build --chown={{userid}}:{{groupid}} {{{domain_home}}} {{{domain_home}}}/
        RUN chmod g+w {{{domain_home}}}
    {{/modelOnly}}
{{/isWdtEnabled}}

USER {{userid}}
WORKDIR {{{work_dir}}}

#ENTRYPOINT /bin/bash

{{#finalBuildCommands}}
    {{{.}}}
{{/finalBuildCommands}}
